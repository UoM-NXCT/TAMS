# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 poetry
          poetry install
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Lint with black
        run: |
          poetry run black --check .
      - name: Lint with isort
        run: |
          poetry run isort --check-only --profile black .
      - name: Lint with ssort
        run: |
          poetry run ssort --check .
      - name: Test with pytest
        run: |
          # GitHub Actions can't run GUI tests and it's not worth my time to fix it
          poetry run pytest --ignore=client/tests/test_pyside.py --ignore=client/tests/test_utils.py --ignore=client/tests/gui_base_test.py
      - name: Test with mypy
        run: |
          poetry run mypy client/runners --strict
          poetry run mypy client/utils --strict
